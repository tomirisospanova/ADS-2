public class MyArrayList<E> implements MyList<E> {

    // Define an array to hold the elements of the list
    private Object[] elements;

    // Define a variable to keep track of the number of elements in the list
    private int size;

    // Constructor to create a new MyArrayList object with an initial capacity
    public MyArrayList(int initialCapacity) {
        elements = new Object[initialCapacity];
        size = 0;
    }

    // Add an element to the end of the list
    public void add(E element) {
        // Check if the array is large enough to accommodate the new element
        if (size == elements.length) {
            // If not, create a new array with double the size of the original array
            Object[] newElements = new Object[2 * elements.length];
            // Copy over the elements from the original array
            for (int i = 0; i < size; i++) {
                newElements[i] = elements[i];
            }
            // Set the elements variable to the new array
            elements = newElements;
        }
        // Add the new element to the end of the array
        elements[size] = element;
        // Increment the size variable
        size++;
    }

    // Get the element at the specified index
    public E get(int index) {
        // Check if the index is valid
        if (index < 0 || index >= size) {
            throw new IndexOutOfBoundsException();
        }
        // Return the element at the specified index
        return (E) elements[index];
    }

    // Remove the element at the specified index
    public E remove(int index) {
        // Check if the index is valid
        if (index < 0 || index >= size) {
            throw new IndexOutOfBoundsException();
        }
        // Get the element at the specified index
        E removedElement = (E) elements[index];
        // Shift all subsequent elements to the left by one position
        for (int i = index; i < size - 1; i++) {
            elements[i] = elements[i + 1];
        }
        // Decrement the size variable
        size--;
        // Return the removed element
        return removedElement;
    }

    // Get the number of elements in the list
    public int size() {
        return size;
    }
}
  
